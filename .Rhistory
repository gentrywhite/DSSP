library(devtools)
run_examples()
document()
check()
check()
Rcpp::compileAttributes()
build_vignettes()
usethis::use_vignette("dssp")
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
library(ggplot2)
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), fitted.values = TRUE pars=c(0.001,0.001))
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), fitted.values = TRUE,pars=c(0.001,0.001))
ETA<-meuse.fit$eta
DELTA<-meuse.fit$delta
NU<-meuse.fit$nu
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-rowMeans(exp(NU*scale.y+center.y))
meuse$Yhat<-Yhat ## Model estimates of E(zinc concentration (ppm))
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-rowMeans(exp(NU*scale.y+center.y))
Yhat
length(meuse$Yhat)
meuse$Yhat<-Yhat
Yhat
dim(Yhat)
meuse$Yhat
meuse
dim(rowMeans(exp(NU*scale.y+center.y)))
length(rowMeans(exp(NU*scale.y+center.y)))
length(colMeans(exp(NU*scale.y+center.y)))
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
meuse$Yhat<-Yhat ## Model estimates of E(zinc concentration (ppm))
meuse$Y.true<-meuse.all$zinc[1:155]
##  Compare the smoothed values and the observed values
smooth.data<-data.frame(Yhat=meuse$Yhat,Y.true=meuse$Y.true)
smooth.scatterplot<-ggplot(smooth.data,aes(x=Yhat,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Smoothed Values",y="Observed Values",title="Smoothed vs. Observed Values")+
xlim(min(smooth.data),max(smooth.data))+
ylim(min(smooth.data),max(smooth.data))+
theme(plot.title = element_text(hjust=0.5))
smooth.scatterplot
##  Now plot Parameter Estimates and ACF Plots
eta.densityplot<-ggplot(data.frame(x=ETA))+geom_density(aes(x=x))+
labs(x=expression(eta),y="posterior density",title=expression("Posterior Density of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta.densityplot<-ggplot(data.frame(x=DELTA))+geom_density(aes(x=x))+
labs(x=expression(delta),y="posterior density",title=expression("Posterior Density of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.densityplot
delta.densityplot
eta_acf <- acf(ETA, plot = FALSE)
eta_acfdf <- with(eta_acf, data.frame(lag, acf))
eta.acfplot<-ggplot(data = eta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta_acf <- acf(DELTA, plot = FALSE)
delta_acfdf <- with(delta_acf, data.frame(lag, acf))
delta.acfplot<-ggplot(data = delta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.acfplot
delta.acfplot
eta.cumsumplot<-ggplot(data.frame(x=1:length(ETA),y=cumsum(ETA)/(1:length(ETA))))+
geom_line(aes(x=x,y=y))+
labs(x="sample",y=expression(eta),title=bquote(atop("Cumuulative Mean of Samples","from Posterior of"~eta)))+
theme(plot.title=element_text(hjust=0.5))
delta.cumsumplot<-ggplot(data.frame(x=1:length(DELTA),y=cumsum(DELTA)/(1:length(DELTA))))+
geom_line(aes(x=x,y=y))+
labs(x="sample",y=expression(eta),title=bquote(atop("Cumuulative Mean of Samples","from Posterior of"~delta)))+
theme(plot.title=element_text(hjust=0.5))
eta.cumsumplot
delta.cumsumplot
##  Try prediciting at new locations to see the differnces
##  Try prediciting at new locations to see the differnces
Y.pred<-DSSP.predict(meuse.fit,X.pred)
Y.pred<-exp(Y.pred*scale.y+center.y)
##  Plot Results and comapre the true values
pred.data<-data.frame(Yhat.pred=rowMeans(Y.pred),Y.true=meuse.all$zinc[156:164])
pred.scatterplot<-ggplot(pred.data,aes(x=Yhat.pred,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Predicted Values",y="True Values",title="Predicted vs. True Values")+
xlim(min(pred.data),max(pred.data))+
ylim(min(pred.data),max(pred.data))+
theme(plot.title = element_text(hjust=0.5))
pred.boxplot<-ggplot(stack(as.data.frame(t(Y.pred))))+
geom_boxplot(aes(x=ind,y=values))+
geom_point(data=data.frame(Y.true=meuse.all$zinc[156:164]),aes(x=1:9,y=Y.true),shape=4,size=3)+
labs(x="",y="Y",title=bquote(atop("Boxplot of Predicted Values of","Y and True Values (X)")))+
theme(plot.title = element_text(hjust=0.5))
pred.scatterplot
pred.boxplot
Y.pred
Y.pred<-DSSP.predict(meuse.fit,X.pred)
head(Y.pred)
unique(Y.pred)
dim(Y.pred)
X.pred
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), pars=c(0.001,0.001), fitted.values = T)
# source("DSSP_predict.R")
preds <- DSSP.predict(dssp.model=meuse.fit, x.pred=X.pred)
preds
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
##  Prepare the data
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), pars=c(0.001,0.001), fitted.values = T)
# source("DSSP_predict.R")
preds <- DSSP.predict(dssp.model=meuse.fit, x.pred=X.pred)
preds
load_all()
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
##  Prepare the data
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-100  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), pars=c(0.001,0.001), fitted.values = T)
# source("DSSP_predict.R")
preds <- DSSP.predict(dssp.model=meuse.fit, x.pred=X.pred)
preds
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
##  Prepare the data
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), pars=c(0.001,0.001), fitted.values = T)
# source("DSSP_predict.R")
preds <- DSSP.predict(dssp.model=meuse.fit, x.pred=X.pred)
preds
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
##  Prepare the data
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-1000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), pars=c(0.001,0.001), fitted.values = T)
# source("DSSP_predict.R")
preds <- DSSP.predict(dssp.model=meuse.fit, x.pred=X.pred)
preds
install()
build_vignettes()
.Last.error.trace
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sp)
library(gstat)
library(mvnfast)
library(rust)
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), fitted.values = TRUE,pars=c(0.001,0.001))
ETA<-meuse.fit$eta
DELTA<-meuse.fit$delta
NU<-meuse.fit$nu
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
meuse$Yhat<-Yhat ## Model estimates of E(zinc concentration (ppm))
meuse$Y.true<-meuse.all$zinc[1:155]
##  Compare the smoothed values and the observed values
smooth.data<-data.frame(Yhat=meuse$Yhat,Y.true=meuse$Y.true)
smooth.scatterplot<-ggplot(smooth.data,aes(x=Yhat,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Smoothed Values",y="Observed Values",title="Smoothed vs. Observed Values")+
xlim(min(smooth.data),max(smooth.data))+
ylim(min(smooth.data),max(smooth.data))+
theme(plot.title = element_text(hjust=0.5))
smooth.scatterplot
##  Now plot Parameter Estimates and ACF Plots
eta.densityplot<-ggplot(data.frame(x=ETA))+geom_density(aes(x=x))+
labs(x=expression(eta),y="posterior density",title=expression("Posterior Density of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta.densityplot<-ggplot(data.frame(x=DELTA))+geom_density(aes(x=x))+
labs(x=expression(delta),y="posterior density",title=expression("Posterior Density of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.densityplot
delta.densityplot
eta_acf <- acf(ETA, plot = FALSE)
eta_acfdf <- with(eta_acf, data.frame(lag, acf))
eta.acfplot<-ggplot(data = eta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta_acf <- acf(DELTA, plot = FALSE)
delta_acfdf <- with(delta_acf, data.frame(lag, acf))
delta.acfplot<-ggplot(data = delta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.acfplot
delta.acfplot
eta.cumsumplot<-ggplot(data.frame(x=1:length(ETA),y=cumsum(ETA)/(1:length(ETA))))+
geom_line(aes(x=x,y=y))+
labs(x="sample",y=expression(eta),title=bquote(atop("Cumuulative Mean of Samples","from Posterior of"~eta)))+
theme(plot.title=element_text(hjust=0.5))
delta.cumsumplot<-ggplot(data.frame(x=1:length(DELTA),y=cumsum(DELTA)/(1:length(DELTA))))+
geom_line(aes(x=x,y=y))+
labs(x="sample",y=expression(eta),title=bquote(atop("Cumuulative Mean of Samples","from Posterior of"~delta)))+
theme(plot.title=element_text(hjust=0.5))
eta.cumsumplot
delta.cumsumplot
##  Try prediciting at new locations to see the differnces
Y.pred<-DSSP.predict(meuse.fit,X.pred)
Y.pred<-exp(Y.pred*scale.y+center.y)
##  Plot Results and compare the true values
pred.data<-data.frame(Yhat.pred=rowMeans(Y.pred),Y.true=meuse.all$zinc[156:164])
pred.scatterplot<-ggplot(pred.data,aes(x=Yhat.pred,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Predicted Values",y="True Values",title="Predicted vs. True Values")+
xlim(min(pred.data),max(pred.data))+
ylim(min(pred.data),max(pred.data))+
theme(plot.title = element_text(hjust=0.5))
pred.boxplot<-ggplot(stack(as.data.frame(t(Y.pred))))+
geom_boxplot(aes(x=ind,y=values))+
geom_point(data=data.frame(Y.true=meuse.all$zinc[156:164]),aes(x=1:9,y=Y.true),shape=4,size=3)+
labs(x="",y="Y",title=bquote(atop("Boxplot of Predicted Values of","Y and True Values (X)")))+
theme(plot.title = element_text(hjust=0.5))
pred.scatterplot
pred.boxplot
##  Plot Results and compare the true values
pred.data<-data.frame(Yhat.pred=colMeans(Y.pred),Y.true=meuse.all$zinc[156:164])
pred.data<-data.frame(Yhat.pred=rowMeans(Y.pred),Y.true=meuse.all$zinc[156:164])
pred.data
library(devtools)
build_vignettes()
.Last.error.trace
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sp)
library(gstat)
library(mvnfast)
library(rust)
library(DSSP)
library(ggplot2)
data("meuse.all")
data("meuse")
coordinates(meuse.all) = ~x+y
X<-scale(coordinates(meuse.all))
X.train<-X[1:155,]
Y<-scale(log(meuse.all$zinc))
Y.train<-Y[1:155]
X.pred<-X[156:164,]
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), fitted.values = TRUE,pars=c(0.001,0.001))
ETA<-meuse.fit$eta
DELTA<-meuse.fit$delta
NU<-meuse.fit$nu
NU
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
meuse$Yhat<-Yhat ## Model estimates of E(zinc concentration (ppm))
meuse$Y.true<-meuse.all$zinc[1:155]
##  Compare the smoothed values and the observed values
smooth.data<-data.frame(Yhat=meuse$Yhat,Y.true=meuse$Y.true)
smooth.scatterplot<-ggplot(smooth.data,aes(x=Yhat,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Smoothed Values",y="Observed Values",title="Smoothed vs. Observed Values")+
xlim(min(smooth.data),max(smooth.data))+
ylim(min(smooth.data),max(smooth.data))+
theme(plot.title = element_text(hjust=0.5))
smooth.scatterplot
##  Now plot Parameter Estimates and ACF Plots
eta.densityplot<-ggplot(data.frame(x=ETA))+geom_density(aes(x=x))+
labs(x=expression(eta),y="posterior density",title=expression("Posterior Density of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta.densityplot<-ggplot(data.frame(x=DELTA))+geom_density(aes(x=x))+
labs(x=expression(delta),y="posterior density",title=expression("Posterior Density of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.densityplot
delta.densityplot
N<-10000  ## number of samples to draw from the DSSP model
meuse.fit<-DSSP(N,X.train,Y.train,function(x) -2*log(1+x), fitted.values = TRUE,pars=c(0.001,0.001))
ETA<-meuse.fit$eta
DELTA<-meuse.fit$delta
NU<-meuse.fit$nu
##  Rescale NU to find the smoothed values of the observed data
center.y<-attr(Y,"scaled:center")
scale.y<-attr(Y,"scaled:scale")
Yhat<-colMeans(exp(NU*scale.y+center.y)) # TODO RP CHANGED THIS FROM rowMeans to colMeans
meuse$Yhat<-Yhat ## Model estimates of E(zinc concentration (ppm))
meuse$Y.true<-meuse.all$zinc[1:155]
##  Compare the smoothed values and the observed values
smooth.data<-data.frame(Yhat=meuse$Yhat,Y.true=meuse$Y.true)
smooth.scatterplot<-ggplot(smooth.data,aes(x=Yhat,y=Y.true))+
geom_point(size=3)+
geom_abline(aes(intercept=0,slope=1))+
labs(x="Smoothed Values",y="Observed Values",title="Smoothed vs. Observed Values")+
xlim(min(smooth.data),max(smooth.data))+
ylim(min(smooth.data),max(smooth.data))+
theme(plot.title = element_text(hjust=0.5))
smooth.scatterplot
##  Now plot Parameter Estimates and ACF Plots
eta.densityplot<-ggplot(data.frame(x=ETA))+geom_density(aes(x=x))+
labs(x=expression(eta),y="posterior density",title=expression("Posterior Density of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta.densityplot<-ggplot(data.frame(x=DELTA))+geom_density(aes(x=x))+
labs(x=expression(delta),y="posterior density",title=expression("Posterior Density of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.densityplot
delta.densityplot
eta_acf <- acf(ETA, plot = FALSE)
eta_acfdf <- with(eta_acf, data.frame(lag, acf))
eta.acfplot<-ggplot(data = eta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*eta))+
theme(plot.title=element_text(hjust=0.5))
delta_acf <- acf(DELTA, plot = FALSE)
delta_acfdf <- with(delta_acf, data.frame(lag, acf))
delta.acfplot<-ggplot(data = delta_acfdf, mapping = aes(x = lag, y = acf)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = lag, yend = 0))+
labs(x="Lag",y="ACF",title=expression("ACF for Samples from Posterior of "*delta))+
theme(plot.title=element_text(hjust=0.5))
eta.acfplot
delta.acfplot
devtools::build_vignettes()
check()
library(devtools)
check()
